- name: Set timezone
  ansible.builtin.timezone:
    name: "{{ timezone }}"

- name: Locally set timezone
  set_fact:
    ansible_local:
      timezone: "{{ timezone }}"
  
- name: Restart cron
  ansible.builtin.service:
    name: cron
    state: restarted

- name: Remove ufw
  ansible.builtin.package:
    name: ufw
    state: absent

- name: Install iptables
  ansible.builtin.package:
    name:
      - iptables
      - conntrack
    state: present

- name: Set automatic open access
  cron:
    name: "automatic open access"
    minute: "{{ (unblock_date | to_datetime).minute }}"
    hour: "{{ (unblock_date | to_datetime).hour }}"
    day: "{{ (unblock_date | to_datetime).day }}"
    month: "{{ (unblock_date | to_datetime).month }}"
    job: >
      iptables -F &&
      crontab -l | grep -v "automatic open access" | crontab -
    user: root
    state: present

- name: Get date 
  command: date "+%Y-%m-%d %H:%M:%S"
  environment:
    TZ: "{{ timezone }}"
  register: current_date
  changed_when: false

- name: Close in 1 minute from now
  cron:
    name: "automatic close access {{ item }}"
    minute: "{{ current_date.stdout.split(' ')[1] | int + 1 }}"
    hour: "{{ current_date.stdout.split(' ')[2] }}"
    day: "{{ current_date.stdout.split(' ')[3] }}"
    month: "{{ current_date.stdout.split(' ')[4] }}"
    job: >
      conntrack -D -p tcp --dport {{ item }} &&
      iptables -D INPUT -p tcp --dport {{ item }} -j ACCEPT 2>/dev/null || true &&
      iptables -A INPUT -p tcp --dport {{ item }} -j DROP &&
      crontab -l | grep -v "{{ item }}" | crontab -
    user: root
    state: present
  with_items:
    - 22  # SSH
    - 3389  # RDP